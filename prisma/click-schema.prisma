// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./generated/click-schema-client"
}

datasource db {
  provider = "postgresql"
  url      = env("CLICK_DATABASE_URL")
}

model ErrorLog {
  id             Int      @id @default(autoincrement()) @map("id")
  ykiho          String   @map("ykiho") @db.VarChar(8)
  computerName   String   @map("computer_name") @db.VarChar(50)
  moduleName     String   @map("module_name") @db.VarChar(20)
  logLevel       String   @map("log_level") @db.VarChar(50)
  exceptionType  String   @map("exception_type") @db.VarChar(50)
  errorMessage   String   @map("error_message") @db.Text
  stackTrace     String?  @map("stack_trace") @db.Text
  source         String?  @map("source") @db.VarChar(255)
  createdAt      DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  additionalData Json?    @map("additional_data")
  clientVersion  String   @default("") @map("client_version") @db.VarChar(20)

  @@map("error_logs")
}

model SettingRecord {
  id        Int      @id @default(autoincrement()) @map("id")
  ykiho     String   @unique @map("ykiho") @db.VarChar(8)
  data      Json     @map("data")
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamp(6)

  @@map("setting_records")
}

model SlowQuery {
  id               Int   @id @default(autoincrement())
  ykiho            String   @db.VarChar(8)
  computerName     String   @map("computer_name") @db.VarChar(50)
  moduleName       String   @map("module_name") @db.VarChar(50)
  path             String   @db.VarChar(50)
  queryString      String   @map("query_string") @db.Text
  executionSeconds Float    @map("execution_seconds")
  createdAt        DateTime @default(now()) @map("created_at") @db.Timestamptz

  @@map("slow_queries")
}
